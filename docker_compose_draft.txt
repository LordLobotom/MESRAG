version: '3.8'

services:
  # Reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - api

  # FastAPI backend
  api:
    build: .
    environment:
      - DATABASE_URL=postgresql://user:pass@postgres:5432/mesrag
      - REDIS_URL=redis://redis:6379
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
    volumes:
      - ./uploads:/app/uploads
      - ./src:/app/src  # development hot reload
    depends_on:
      - postgres
      - redis
      - chromadb

  # Metadata database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=mesrag
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # Vector database
  chromadb:
    image: chromadb/chroma:latest
    volumes:
      - chromadb_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0

  # Cache & sessions
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data

  # Local AI embeddings
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0

volumes:
  postgres_data:
  chromadb_data:
  redis_data:
  ollama_data: